{"version":3,"sources":["AppV5.js","reportWebVitals.js","index.js"],"names":["contents","1","title","desc","2","3","4","5","6","variants","hidden","opacity","visible","titleVariants","y","App","useState","step","setStep","canTriggerNextStep","setCanTriggerNextStep","canTriggerPrevStep","setCanTriggerPrevStep","videoPlayerRef","useRef","console","log","next","useCallback","video","current","nextStep","addEventListener","listener","currentTime","duration","Object","keys","length","removeEventListener","prev","prevStep","className","initial","animate","exit","transition","autoPlay","autobuffer","preload","ref","src","process","type","disabled","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAKMA,EAAW,CACfC,EAAG,CACDC,MAAO,uDACPC,KAAM,2MAERC,EAAG,CACDF,MAAO,sBACPC,KAAM,wHAERE,EAAG,CACDH,MAAO,oBACPC,KAAM,0KAERG,EAAG,CACDJ,MAAO,oBACPC,KAAM,mJAERI,EAAG,CACDL,MAAO,qCACPC,KAAM,4NAERK,EAAG,CACDN,MAAO,kBACPC,KAAM,sIAIJM,EAAW,CACfC,OAAQ,CAAEC,QAAS,GACnBC,QAAS,CAAED,QAAS,IAGhBE,EAAgB,CACpBH,OAAQ,CAAEC,QAAS,EAAGG,GAAI,IAC1BF,QAAS,CAAED,QAAS,EAAGG,EAAG,IAoGbC,MAjGf,WAAgB,IAAD,EACWC,mBAAS,GADpB,mBACNC,EADM,KACAC,EADA,OAEuCF,oBAAS,GAFhD,mBAENG,EAFM,KAEcC,EAFd,OAGuCJ,oBAAS,GAHhD,mBAGNK,EAHM,KAGcC,EAHd,KAIPC,EAAiBC,mBACvBC,QAAQC,IAAI,CAAEL,qBAAoBF,uBAElC,IAAMQ,EAAOC,uBAAY,WACvBN,GAAsB,GACtBF,GAAsB,GACtB,IAAMS,EAAQN,EAAeO,QACvBC,EAAWd,EAAO,EACxBC,EAAQa,GACRF,EAAMG,iBAAiB,cAAc,SAASC,IACxCJ,EAAMK,aAAeL,EAAMM,SAAW,KACxCb,EAAsBS,EAAW,GACjCX,EAAsBW,EAAWK,OAAOC,KAAKrC,GAAUsC,QACvDT,EAAMU,oBAAoB,aAAcN,SAG3C,CAAChB,IAEEuB,EAAOZ,uBAAY,WACvBN,GAAsB,GACtBF,GAAsB,GACtB,IAAMS,EAAQN,EAAeO,QACvBW,EAAWxB,EAAO,EACxBC,EAAQuB,GACRZ,EAAMG,iBAAiB,cAAc,SAASC,IACxCJ,EAAMK,aAAeL,EAAMM,SAAW,KACxCb,EAAsBmB,EAAW,GACjCrB,EAAsBqB,EAAWL,OAAOC,KAAKrC,GAAUsC,QACvDT,EAAMU,oBAAoB,aAAcN,SAG3C,CAAChB,IAEJ,OACE,qBAAKyB,UAAU,MAAf,SACE,sBAAKA,UAAU,iBAAf,UAEE,uBACEC,QAAQ,SACRC,QAAQ,UACRC,KAAK,SACLpC,SAAUA,EACVqC,WAAY,CAAEX,SAAU,GACxBY,UAAQ,EACRC,WAAW,aACXC,QAAQ,UACRP,UAAU,YACVQ,IAAK3B,EACL4B,IAAG,UAAKC,gBAAL,qCAAwDnC,EAAxD,QACHoC,KAAK,cAGP,sBAAKX,UAAU,gBAAf,UACE,oBACEC,QAAQ,SACRC,QAAQ,UACRC,KAAK,SACLpC,SAAUI,EACViC,WAAY,CAAEX,SAAU,IAL1B,SAOGnC,EAASiB,GAAMf,QAElB,mBACEyC,QAAQ,SACRC,QAAQ,UACRC,KAAK,SACLpC,SAAUI,EACViC,WAAY,CAAEX,SAAU,IAL1B,SAOGnC,EAASiB,GAAMd,OAElB,sBAAKuC,UAAU,gBAAf,UACE,wBACEA,UAAU,SACVY,UAAWjC,EACXkC,QAASf,EAHX,6BAOA,wBACEE,UAAU,SACVY,UAAWnC,EACXoC,QAAS5B,EAHX,iCCjHG6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.65e66270.chunk.js","sourcesContent":["import { useRef, useState, useCallback } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nimport \"./App.css\";\n\nconst contents = {\n  1: {\n    title: \"L’acceuil regroupe les informations principales\",\n    desc: \"Pour y accéder, cliquez sur l’icône de maison dans le bas de l’écran. Vous retrouverez un aperçu rapide sur les informations principales de votre activité des prochains jours\",\n  },\n  2: {\n    title: \"Vos prochains jours\",\n    desc: \"Les parties bleues correspondent aux leçons réservées et les parties blanches aux créneaux sans leçon\",\n  },\n  3: {\n    title: \"Leçon en cours\",\n    desc: \"La leçon en cours est affichée dans le haut de l’acceuil. Si ancune leçon n’est en cours, vous trouvrerez les informations de la prochaine leçon\",\n  },\n  4: {\n    title: \"Leçon suivante\",\n    desc: \"Vous avez accès à tout le détail de la prochaine leçon : identité de l’élève, type de leçon et lieu de rendez-vous\",\n  },\n  5: {\n    title: \"Leçon en attente d’actions\",\n    desc: \"En bas de la page, vous trouverez toutes les leçons sur lesquelles une action de votre part est attendue : les comptes-rendu non effectués, les propositions de leçons non acceptées par les élèves...\",\n  },\n  6: {\n    title: \"Actions rapides\",\n    desc: \"Le bouton + permet de proposer des leçons, d’ouvrir vos disponibiltés ou de mettre des indisponibilités ponctuelles\",\n  },\n};\n\nconst variants = {\n  hidden: { opacity: 0 },\n  visible: { opacity: 1 },\n};\n\nconst titleVariants = {\n  hidden: { opacity: 0, y: -10 },\n  visible: { opacity: 1, y: 0 },\n};\n\nfunction App() {\n  const [step, setStep] = useState(1);\n  const [canTriggerNextStep, setCanTriggerNextStep] = useState(true);\n  const [canTriggerPrevStep, setCanTriggerPrevStep] = useState(false);\n  const videoPlayerRef = useRef();\n  console.log({ canTriggerPrevStep, canTriggerNextStep });\n\n  const next = useCallback(() => {\n    setCanTriggerPrevStep(false);\n    setCanTriggerNextStep(false);\n    const video = videoPlayerRef.current;\n    const nextStep = step + 1;\n    setStep(nextStep);\n    video.addEventListener(\"timeupdate\", function listener() {\n      if (video.currentTime >= video.duration - 0.2) {\n        setCanTriggerPrevStep(nextStep > 1);\n        setCanTriggerNextStep(nextStep < Object.keys(contents).length);\n        video.removeEventListener(\"timeupdate\", listener);\n      }\n    });\n  }, [step]);\n\n  const prev = useCallback(() => {\n    setCanTriggerPrevStep(false);\n    setCanTriggerNextStep(false);\n    const video = videoPlayerRef.current;\n    const prevStep = step - 1;\n    setStep(prevStep);\n    video.addEventListener(\"timeupdate\", function listener() {\n      if (video.currentTime >= video.duration - 0.5) {\n        setCanTriggerPrevStep(prevStep > 1);\n        setCanTriggerNextStep(prevStep < Object.keys(contents).length);\n        video.removeEventListener(\"timeupdate\", listener);\n      }\n    });\n  }, [step]);\n\n  return (\n    <div className=\"app\">\n      <div className=\"tuto-container\">\n        {/* <AnimatePresence key={step} exitBeforeEnter> */}\n        <video\n          initial=\"hidden\"\n          animate=\"visible\"\n          exit=\"hidden\"\n          variants={variants}\n          transition={{ duration: 2 }}\n          autoPlay\n          autobuffer=\"autobuffer\"\n          preload=\"preload\"\n          className=\"videotuto\"\n          ref={videoPlayerRef}\n          src={`${process.env.PUBLIC_URL}/videos/Onboarding_Ecran_0${step}.mp4`}\n          type=\"video/mp4\"\n        />\n        {/* </AnimatePresence> */}\n        <div className=\"video-overlay\">\n          <h3\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"hidden\"\n            variants={titleVariants}\n            transition={{ duration: 0.5 }}\n          >\n            {contents[step].title}\n          </h3>\n          <p\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"hidden\"\n            variants={titleVariants}\n            transition={{ duration: 0.5 }}\n          >\n            {contents[step].desc}\n          </p>\n          <div className=\"btn-container\">\n            <button\n              className=\"button\"\n              disabled={!canTriggerPrevStep}\n              onClick={prev}\n            >\n              Précédent\n            </button>\n            <button\n              className=\"button\"\n              disabled={!canTriggerNextStep}\n              onClick={next}\n            >\n              Suivant\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./AppV5\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}